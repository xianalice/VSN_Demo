{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Calibri;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red196\green26\blue22;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
VSN Connect - README\
Version 1.0\
Last Updated: 8/19/2014\
\
\
This sample code will help you get started with the VSN sdk.  It provides sample code for how to:\
\
\pard\pardeftab720

\f1\fs28 \cf0 -scan for devices\
-connected to a pre-defined device address\
-Send the correct verification code to the puck\
-And then enable short button presses and display the status/press on the screen\
\
IMPORTANT:\
\
1) To get started you\'92ll need to change the #define VALRT_DEVICE_LOCAL_NAME to be the local name of your device.  This is defined in ViewController.m.\
\
For example:\
\pard\tx529\pardeftab529\pardirnatural

\f2\fs22 \cf2 \CocoaLigature0 #define VALRT_DEVICE_LOCAL_NAME @\cf3 "V.ALRT A3:37:53"
\f1\fs28 \cf0 \CocoaLigature1 \
\pard\pardeftab720
\cf0 \
2) If you need help finding the local name of your V.ALRT, we recommend using a tool called Light Blue.  You can download it here:\
\
https://itunes.apple.com/us/app/lightblue/id639944780?mt=12\
\
3) Note, the iOS simulator bluetooth support is limited to the device only, so running this code in the simulator will not let you use bluetooth.\
}